name: "InferSharp-AzurePipelinesExample-Multistage"

jobs:
# Example of existing build pipeline
- job: RunExistingBuildPipeline
  pool:
    vmImage: 'windows-2019'

  steps:
  # Build
  - task: DotNetCoreCLI@2
    displayName: 'dotnet build'
    inputs:
      projects: Examples/Examples.sln
  
  # Copy binaries to a staging folder
  - task: CopyFiles@2
    displayName: 'Copy output binaries'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/Examples/Examples/bin/Debug'
      Contents: '**\?(*.dll|*.pdb|*.exe)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
  
  # Publish binaries
  - task: PublishBuildArtifacts@1
    displayName: 'Publish binaries'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'infersharp-input'
      publishLocation: 'Container'

# Run Infer#
- job: RunInferSharp
  dependsOn: 'RunExistingBuildPipeline'
  pool:
    vmImage: 'ubuntu-20.04'
  container:
    image: mcr.microsoft.com/infersharp:v1.2

  steps:
  # Download binaries
  - task: DownloadBuildArtifacts@0
    displayName: 'Download binaries'
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'infersharp-input'
      downloadPath: '$(System.ArtifactsDirectory)'

  - script: |
      curl -o run_infersharp.sh https://raw.githubusercontent.com/microsoft/infersharpaction/v1.2.1/run_infersharp_ci.sh
      chmod +x run_infersharp.sh
      ./run_infersharp.sh $(System.ArtifactsDirectory)
    displayName: 'Run Infer# analysis'

  # Display as build console logs
  - script: cat $(Build.SourcesDirectory)/infer-out/report.txt
    displayName: 'Infer# analysis result'
  
  # Publish SARIF
  - task: PublishBuildArtifacts@1
    displayName: "Publish Infer# SARIF"
    inputs:
      PathtoPublish: "$(Build.SourcesDirectory)/infer-out/report.sarif"
      ArtifactName: "infersharp-output"
      publishLocation: "Container"