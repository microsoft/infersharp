#0
C:\Users\matjin\source\repos\ClassLibrary1\ClassLibrary1\Class1.cs:17: error: Pulse Resource Leak
  Resource dynamically allocated by constructor System.IO.FileStream() on line 18 is not closed after the last access at line 17, column 5.

#1
C:\Users\matjin\source\repos\ClassLibrary1\ClassLibrary1\Class1.cs:33: error: Pulse Resource Leak
  Resource dynamically allocated by constructor System.IO.FileStream() on line 33 is not closed after the last access at line 33, column 9.

#2
C:\Users\matjin\source\repos\ClassLibrary1\ClassLibrary1\Class1.cs:48: error: Pulse Resource Leak
  Resource dynamically allocated by constructor System.IO.FileStream() on line 47 is not closed after the last access at line 48, column 9.

#3
C:\Users\matjin\source\repos\ClassLibrary1\ClassLibrary1\Class1.cs:83: error: Pulse Resource Leak
  Resource dynamically allocated by constructor System.IO.FileStream() on line 83 is not closed after the last access at line 83, column 9.

#4
C:\Users\matjin\source\repos\ClassLibrary1\ClassLibrary1\Class1.cs:114: error: Pulse Resource Leak
  Resource dynamically allocated by constructor System.IO.FileStream() on line 119 is not closed after the last access at line 114, column 5.

#5
C:\Users\matjin\source\repos\ClassLibrary1\ClassLibrary1\Class1.cs:134: error: Pulse Resource Leak
  Resource dynamically allocated by constructor System.IO.FileStream(), indirectly via call to `InferResourceLeakTests.CreateStreamOk()` on line 134 is not closed after the last access at line 134, column 9.

#6
C:\Users\matjin\source\repos\ClassLibrary1\ClassLibrary1\Class1.cs:165: error: Pulse Resource Leak
  Resource dynamically allocated by constructor TakeAndDispose() on line 165 is not closed after the last access at line 165, column 9.

#7
C:\Users\matjin\source\repos\ClassLibrary1\ClassLibrary1\Class1.cs:179: error: Pulse Resource Leak
  Resource dynamically allocated by constructor System.IO.FileStream() on line 177 is not closed after the last access at line 179, column 9.

#8
C:\Users\matjin\source\repos\ClassLibrary1\ClassLibrary1\Class1.cs:213: error: Pulse Resource Leak
  Resource dynamically allocated by constructor System.IO.FileStream() on line 212 is not closed after the last access at line 213, column 9.

#9
C:\Users\matjin\source\repos\ClassLibrary1\ClassLibrary1\Class1.cs:294: error: Pulse Resource Leak
  Resource dynamically allocated by constructor System.IO.FileStream() on line 294 is not closed after the last access at line 294, column 63.

#10
C:\Users\matjin\source\repos\ClassLibrary1\ClassLibrary1\Class1.cs:309: error: Pulse Resource Leak
  Resource dynamically allocated by constructor System.IO.FileStream() on line 309 is not closed after the last access at line 309, column 52.

#11
C:\Users\matjin\source\repos\ClassLibrary1\ClassLibrary1\Class1.cs:396: error: Pulse Resource Leak
  Resource dynamically allocated by constructor System.IO.FileStream() on line 394 is not closed after the last access at line 396, column 9.

#12
C:\Users\matjin\source\repos\ClassLibrary1\ClassLibrary1\Class1.cs:427: error: Pulse Resource Leak
  Resource dynamically allocated by constructor System.IO.FileStream() on line 424 is not closed after the last access at line 427, column 25.

#13
C:\Users\matjin\source\repos\infersharp\Examples\WebApplication1\Program.cs:19: error: Taint Error
  `String Int32.ToString()()` is tainted by passed as argument #0 to Void PulseTaintTests.sqlBadInt(Int32) with kind UserControlledURI and flows to passed as argument #1 to Void DbCommand.set_CommandText(String) with kind SQLInjection (tainted flow).

#14
C:\Users\matjin\source\repos\infersharp\Examples\WebApplication1\Program.cs:25: error: Taint Error
  `InputParameter` is tainted by passed as argument #0 to Void PulseTaintTests.sqlBadString(String) with kind UserControlledURI and flows to passed as argument #1 to Void DbCommand.set_CommandText(String) with kind SQLInjection (tainted flow).

#15
C:\Users\matjin\source\repos\infersharp\Examples\WebApplication1\Program.cs:63: warning: Thread Safety Violation
  Unprotected write. Non-private method `ThreadSafety.withdraw(...)` writes to field `this.ThreadSafety.mBalance` outside of synchronization.
 Reporting because another access to the same memory occurs on a background thread, although this access may not.

#16
C:\Users\matjin\source\repos\infersharp\Examples\WebApplication1\Program.cs:70: warning: Thread Safety Violation
  Read/Write race. Non-private method `ThreadSafety.withdraw(...)` reads without synchronization from `this.ThreadSafety.mBalance`. Potentially races with write in method `ThreadSafety.deposit(...)`.
 Reporting because another access to the same memory occurs on a background thread, although this access may not.

#17
C:\Users\matjin\source\repos\infersharp\Examples\WebApplication1\Program.cs:95: error: Null Dereference
  `String ThreadSafety.NullDeReferenceBad()()` could be null (from the call to `ThreadSafety.NullDeReferenceBad()` on line 95) and is dereferenced.

Found 18 issues
                        Issue Type(ISSUED_TYPE_ID): #
          Pulse Resource Leak(PULSE_RESOURCE_LEAK): 13
  Thread Safety Violation(THREAD_SAFETY_VIOLATION): 2
                          Taint Error(TAINT_ERROR): 2
             Null Dereference(NULLPTR_DEREFERENCE): 1
